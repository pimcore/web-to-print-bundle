---
add_printpage: "Prida\u0165 Print str\xE1nku"
add_printcontainer: "Prida\u0165 Print kontajner"
web2print_settings: Web-to-Print Settings
web2print_preview_pdf: "Generova\u0165 a prezrie\u0165 PDF"
web2print_cancel_pdf_creation: "Zru\u0161i\u0165 generovanie PDF"
web2print_generate_pdf: "Generova\u0165 PDF"
web2print_download_pdf: "Stiahnu\u0165 PDF"
web2print_last-generated: "Naposledy vygenerovan\xE9"
web2print_last-generate-message: "Posledn\xE1 spr\xE1va"
web2print: Web2Print
web2print_prepare_pdf_generation: "Pr\xEDprava generovania PDF"
web2print_start_html_rendering: "Za\u010Diatok HTML renderovania"
web2print_finished_html_rendering: Koniec HTML renderovania
web2print_saved_html_file: "Ulo\u017Eenie HTML s\xFAboru"
web2print_pdf_conversion: PDF konverzia
web2print_saving_pdf_document: Ukladanie PDF dokumentu
web2print_author: Autor
web2print_printermarks: "Tla\u010Dov\xE9 zna\u010Dky (printermarks)"
web2print_bookmarks: "Z\xE1lo\u017Eky"
web2print_only_published: "Toto je mo\u017En\xE9 len s publikovan\xFDmi dokumentami."
web2print_documents_changed: "Dokumenty boli od posledn\xE9ho generovania zmenen\xE9."
web2print_addOverprint: Overprinting
web2print_enableDebugMode: Enable debug mode
web2print_enableLenientHttpsMode: Enable lenient HTTPS mode
web2print_enableLenientHttpsMode_txt: Enable this option if PDFreactor fails to connect
  successfully via HTTPS
web2print_tags: tags
web2print_links: links
web2print_tool: Tool
web2print_save_mode: Document Save Mode
web2print_save_mode_txt: |-
  Document Save Mode = cleanup deletes all not used document elements for
  current document. This might be necessary for useage reports in print
  documents.
web2print_pdfreactor_settings: PDFreactor Settings
web2print_server: Server
web2print_baseURL: BaseURL
web2print_baseURL_txt: |-
  BaseURL for PDFreactor. This is prefixed to each relative url in print
  templates when creating PDFs.
web2print_docker_baseURL_txt: This is prefixed to each relative url in print templates
  when creating PDFs.
web2print_apiKey_txt: |-
  If the PDFreactor instance is set up to require API keys, you can enter it
  here.
web2print_json_converter: Open JSON converter/validator
web2print_licence: Licence
web2print_gotenberg_settings: Gotenberg Settings
web2print_gotenberg_documentation: Option Documentation
web2print_gotenberg_documentation_additions: Warning
web2print_gotenberg_documentation_additions_text: |-
  Since Gotenberg is Docker-powered service, it requires absolute urls to work.
  By default, it works within the same container by using `http://nginx:80` as
  host url. Please override this configuration accordingly into the settings
  below.
web2print_headlesschrome_json_converter: ""
web2print_hostname: Hostname
web2print_protocol: Protocol
web2print_port: Port
web2print_apiKey: API Key
web2print_chromium_requirements: Requirements
web2print_chromium_requirements_documentation: Please make sure to install chrome-php/chrome
  via composer
web2print_chromium_settings: Chromium settings
web2print_chromium_documentation: Option Documentation
web2print_chromium_options_documentation: |-
  Please make sure following configuration matches the option available on
  Chrome DevTools Documentation, any other values may break the pdf generation
web2print_chromium_documentation_additions: Additional Options
web2print_chromium_documentation_additions_text: |-
  There are two additional options: "header" and "footer". This options need a
  URL, which returns the header or footer template.
web2print_chromium_documentation_docker: Notes for Dockerized Chromium
web2print_chromium_documentation_docker_text: |-
  When using a Dockerized Chromium through WebSocket, the following field must
  be set to the web server service accordingly. eg. `http://nginx:80`
web2print_hostURL: Host Url
...
