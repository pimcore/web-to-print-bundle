---
add_printpage: PrintPagina toevoegen
add_printcontainer: PrintContainer toevoegen
web2print_settings: Web-to-Print Settings
web2print_preview_pdf: PDF Aanmaken en Weergeven
web2print_cancel_pdf_creation: PDF aanmaken annuleren
web2print_generate_pdf: Genereer PDF
web2print_download_pdf: PDF downloaden
web2print_last-generated: Laatst aangemaakt
web2print_last-generate-message: Laatst aangemaakte bericht
web2print: Web2Print
web2print_prepare_pdf_generation: PDF aanmaken voorbereiden
web2print_start_html_rendering: Start HTML opbouw
web2print_finished_html_rendering: HTML opbouw gereed
web2print_saved_html_file: HTML bestand opgeslagen
web2print_pdf_conversion: PDF conversie
web2print_saving_pdf_document: PDF document opslaan
web2print_author: Auteur
web2print_printermarks: Printermarkeringen
web2print_bookmarks: bladwijzers
web2print_only_published: Uitsluitend mogelijk voor gepubliceerde documenten
web2print_documents_changed: Gewijzigde documenten sinds aanmaak laatste PDF
web2print_addOverprint: web2print_addOverprint
web2print_enableDebugMode: Activeer debug mode
web2print_enableLenientHttpsMode: "Abilita la modalit\xE0 HTTPS indulgente"
web2print_enableLenientHttpsMode_txt: |-
  Abilita questa opzione se PDFreactor non riesce a connettersi correttamente
  tramite HTTPS
web2print_tags: tags
web2print_links: links
web2print_tool: Tool
web2print_save_mode: Document Save Mode
web2print_save_mode_txt: |-
  Document Save Mode = cleanup deletes all not used document elements for
  current document. This might be necessary for useage reports in print
  documents.
web2print_pdfreactor_settings: PDFreactor Settings
web2print_server: Server
web2print_baseURL: BaseURL
web2print_baseURL_txt: |-
  BaseURL for PDFreactor. This is prefixed to each relative url in print
  templates when creating PDFs.
web2print_docker_baseURL_txt: This is prefixed to each relative url in print templates
  when creating PDFs.
web2print_apiKey_txt: |-
  If the PDFreactor instance is set up to require API keys, you can enter it
  here.
web2print_json_converter: Open JSON converter/validator
web2print_licence: Licence
web2print_gotenberg_settings: Gotenberg Settings
web2print_gotenberg_documentation: Option Documentation
web2print_gotenberg_documentation_additions: Warning
web2print_gotenberg_documentation_additions_text: |-
  Since Gotenberg is Docker-powered service, it requires absolute urls to work.
  By default, it works within the same container by using `http://nginx:80` as
  host url. Please override this configuration accordingly into the settings
  below.
web2print_headlesschrome_json_converter: ""
web2print_hostname: Hostname
web2print_protocol: Protocol
web2print_port: Port
web2print_apiKey: API Key
web2print_chromium_requirements: Requirements
web2print_chromium_requirements_documentation: Please make sure to install chrome-php/chrome
  via composer
web2print_chromium_settings: Chromium settings
web2print_chromium_documentation: Option Documentation
web2print_chromium_options_documentation: |-
  Please make sure following configuration matches the option available on
  Chrome DevTools Documentation, any other values may break the pdf generation
web2print_chromium_documentation_additions: Additional Options
web2print_chromium_documentation_additions_text: |-
  There are two additional options: "header" and "footer". This options need a
  URL, which returns the header or footer template.
web2print_chromium_documentation_docker: Notes for Dockerized Chromium
web2print_chromium_documentation_docker_text: |-
  When using a Dockerized Chromium through WebSocket, the following field must
  be set to the web server service accordingly. eg. `http://nginx:80`
web2print_hostURL: Host Url
...
