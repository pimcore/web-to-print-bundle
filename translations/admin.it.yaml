---
add_printpage: Aggiunge PrintPage
add_printcontainer: Aggiunge PrintContainer
web2print_settings: Web-to-Print Settings
web2print_preview_pdf: Genera PDF con anteprima
web2print_cancel_pdf_creation: Annulla creazione PDF
web2print_generate_pdf: Genera PDF
web2print_download_pdf: Scarica PDF
web2print_last-generated: Ultimo generato
web2print_last-generate-message: Messaggio ultima generazione
web2print: Web2Print
web2print_prepare_pdf_generation: Prepara generazione PDF
web2print_start_html_rendering: Avvio rappresentazione HTML
web2print_finished_html_rendering: Fine rappresentazione HTML
web2print_saved_html_file: HTML file salvato
web2print_pdf_conversion: Conversione PDF
web2print_saving_pdf_document: Salva il documento PDF
web2print_author: Autore
web2print_printermarks: Printermarks
web2print_bookmarks: Segnalibri
web2print_only_published: Possibile solo con documenti pubblicati.
web2print_documents_changed: I documenti sono stati modificati dopo l'ultima conversione
  in pdf.
web2print_addOverprint: Sovrastampa
web2print_enableDebugMode: "Attiva modalit\xE0 debug"
web2print_enableLenientHttpsMode: "Abilita la modalit\xE0 HTTPS indulgente"
web2print_enableLenientHttpsMode_txt: Abilita questa opzione se PDFreactor non riesce
  a connettersi correttamente tramite HTTPS
web2print_tags: tags
web2print_links: links
web2print_tool: Tool
web2print_save_mode: "Modalit\xE0  salvataggio Documento"
web2print_save_mode_txt: "Modalit\xE0 di salvataggio del documento = cleanup elimina
  tutti gli elementi del documento non utilizzati per il\ndocumento corrente. Potrebbe
  essere necessario per i rapporti di utilizzo nei documenti di stampa.\ndocumenti
  di stampa."
web2print_pdfreactor_settings: Impostazioni PDFreactor
web2print_server: Server
web2print_baseURL: BaseURL
web2print_baseURL_txt: "URL di base per PDFreactor. Questo \xE8 il prefisso di ogni
  url relativo nei modelli di stampa quando si creano i PDF."
web2print_docker_baseURL_txt: "Questo \xE8 il prefisso di ogni url relativo nei modelli
  di stampa quando si creano i PDF."
web2print_apiKey_txt: |-
  If the PDFreactor instance is set up to require API keys, you can enter it
  here.
web2print_json_converter: Apri convertitore/validatore JSON
web2print_licence: Licenza
web2print_gotenberg_settings: Impostazioni Gotenberg
web2print_gotenberg_documentation: Documentazione Opzioni
web2print_gotenberg_documentation_additions: Attenzione
web2print_gotenberg_documentation_additions_text: "Poich\xE9 Gotenberg \xE8 un servizio
  alimentato da Docker, per funzionare ha bisogno di URL assoluti. Per impostazione
  predefinita, funziona all'interno dello stesso contenitore utilizzando `http://nginx:80`
  come\ncome url dell'host. Si prega di sovrascrivere questa configurazione nelle
  impostazioni qui sotto."
web2print_headlesschrome_json_converter: ""
web2print_hostname: Nome Host
web2print_protocol: Protocollo
web2print_port: Porta
web2print_apiKey: Chiave API
web2print_chromium_requirements: Requisiti
web2print_chromium_requirements_documentation: Si prega di assicurarsi che chrome-php/chrome
  sia installato tramite composer
web2print_chromium_settings: Impostazioni Chromium
web2print_chromium_documentation: Documentazione Opzioni
web2print_chromium_options_documentation: Assicurarsi che la configurazione seguente
  corrisponda all'opzione disponibile in Chrome DevTools Documentation, qualsiasi
  altro valore potrebbe interrompere la generazione di pdf.
web2print_chromium_documentation_additions: Opzioni aggiuntive
web2print_chromium_documentation_additions_text: "Esistono due opzioni aggiuntive:
  \"header\" e \"footer\". Queste opzioni necessitano di un URL che restituisce il
  modello dell'intestazione o del pi\xE8 di pagina."
web2print_chromium_documentation_docker: |-
  Note
   per Chromium in Docker
web2print_chromium_documentation_docker_text: Quando si utilizza un Chromium Dockerizzato
  tramite WebSocket, il campo seguente deve essere impostato sul servizio web server.
  Per es. `http://nginx:80`
web2print_hostURL: Url Host
...
